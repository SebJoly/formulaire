<?php

namespace formulaire\php;

/**
 * @author
 */
class FormulaireDriverMYSQL extends FormulaireDriver {

	public $formulaire = null;

	/**
	 * (non-PHPdoc)
	 * @see \formulaire\php\FormulaireDriver::getFieldType()
	 */
	public function getFieldType($name) {
		$requete['requete'] = 'SELECT column_name, data_type FROM information_schema.columns WHERE table_name=:table AND column_name=:name;';
		$requete['parameters'] = array("table" => strtolower($this->getFormulaire()->table), "name" => strtolower($name));
		return $requete;
	}

	/**
	 * (non-PHPdoc)
	 * @see \formulaire\php\FormulaireDriver::setFormulaire()
	 */
	public function setFormulaire($formulaire) {
		$this->formulaire = $formulaire;
	}

	/**
	 * (non-PHPdoc)
	 * @see \formulaire\php\FormulaireDriver::getFormulaire()
	 */
	public function getFormulaire() {
		return $this->formulaire;
	}
	
	/**
	 * (non-PHPdoc)
	 * @see \formulaire\php\FormulaireDriver::isIndex()
	 */
	public function isIndex($name) {
		$requete['requete'] = 'SELECT * FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE TABLE_NAME=:table AND COLUMN_NAME = :column AND CONSTRAINT_NAME=:constraint;';
		$requete['parameters'] = array("table" =>strtolower($this->getFormulaire()->table), "constraint" => "PRIMARY", "column" => $name);
		$data = $this->getFormulaire()->prepareExecute($requete["requete"], $requete["parameters"]);
		
		return count($data) == 1;
	}
	
	/**
	 * (non-PHPdoc)
	 * @see \formulaire\php\FormulaireDriver::isAutoGenerated()
	 */
	public function isAutoGenerated($name) {
		$requete['requete'] = 'SELECT TABLE_NAME, COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=:table AND COLUMN_NAME = :column AND EXTRA = \'auto_increment\';';
		$requete['parameters'] = array("table" => strtolower($this->getFormulaire()->table), "column" => $name);
		$data = $this->getFormulaire()->prepareExecute($requete["requete"], $requete["parameters"]);
	
		return count($data) == 1;
	}
}